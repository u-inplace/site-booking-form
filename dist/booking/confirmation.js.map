{"version":3,"file":"booking/confirmation.js","mappings":"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","sources":["webpack://ui-booking/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://ui-booking/./src/booking/controllers/options.js","webpack://ui-booking/./src/booking/controllers/sequence.js","webpack://ui-booking/./src/booking/helpers/dom.js","webpack://ui-booking/./src/booking/controllers/navigation.js","webpack://ui-booking/./src/booking/fragments/teamMember.js","webpack://ui-booking/./src/booking/helpers/dom/confirmation.js","webpack://ui-booking/./src/booking/helpers/dom/summary.js","webpack://ui-booking/./src/booking/packages/confirmation.js","webpack://ui-booking/./src/booking/controllers/step.js"],"sourcesContent":["/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","/**\n * @typedef {{cleaning:boolean, cooking:boolean, grocery:boolean, ironing:boolean}} Service\n * @typedef {('cleaning'|'cooking'|'grocery'|'ironing')[]} Services\n */\n\n/**\n * Helpers\n */\n\n/**\n * Removes prefix from string\n * @param {string} s input String\n * @param {string} p prefix to be removed\n * @returns {string} string without prefix\n */\nconst rmPrefix = (s, p) => s.replace(new RegExp(`^${p}`), '')\n\n/**\n * Booking Options\n * @class\n * @constructor\n * @public\n */\nexport default class BookingOptions {\n    cookie\n\n    /**\n     * @typedef {Object} SessionOptions\n     * @property {string} cleaning-bathrooms\n     * @property {string} cleaning-bedrooms\n     * @property {boolean} extra-cabinets\n     * @property {boolean} extra-fridge\n     * @property {boolean} extra-oven\n     * @property {boolean} extra-windows\n     * @property {string} ironing\n     * @property {string} postal-code\n     * @property {boolean} service-cleaning\n     * @property {boolean} service-cooking\n     * @property {boolean} service-grocery\n     * @property {boolean} service-ironing\n     * @property {number} duration\n     * @property {string} frequency\n     * @property {string} start-timestamp\n     * @property {string} end-timestamp\n     * @property {string} team-member\n     * @property {string} team-member-name\n     * @property {string} team-member-first-name\n     */\n    /**\n     * @type {SessionOptions}\n     */\n    ops\n\n    constructor() {\n        this.cookie = window.FpCookie\n        this.ops = this.cookie.store\n    }\n\n    /**\n     * Check if options are valid\n     */\n    get isValid() {\n        return Object.keys(this.ops).length > 0\n    }\n\n    /**\n     * @param {string} prefix\n     * @returns {object}\n     */\n    #getOptionWithPrefix(prefix) {\n        return (\n            Object.entries(this.ops)\n                // eslint-disable-next-line no-unused-vars\n                .filter(([key, _]) => key.startsWith(prefix))\n                .reduce((acc, [key, value]) => {\n                    acc[rmPrefix(key, prefix)] = value\n                    return acc\n                }, {})\n        )\n    }\n\n    /**\n     * @param {string} prefix\n     * @param {(any|undefined)} [filter=undefined]\n     * @returns {any[]}\n     */\n    #filterOptionWithPrefix(prefix, filter = undefined) {\n        return (\n            Object.entries(this.ops)\n                .filter(\n                    ([key, value]) =>\n                        key.startsWith(prefix) && (filter === undefined || value === filter)\n                )\n                // eslint-disable-next-line no-unused-vars\n                .map(([key, _]) => rmPrefix(key, prefix))\n        )\n    }\n\n    /**\n     * @returns {{bathrooms:string, bedrooms:string}}\n     */\n    get cleaning() {\n        return this.ops['service-cleaning'] ? this.#getOptionWithPrefix('cleaning-') : {}\n    }\n\n    /**\n     * @returns {('cabinets' | 'fridge' | 'oven' | 'windows')[]}\n     */\n    get extras() {\n        return this.ops['service-cleaning'] ? this.#filterOptionWithPrefix('extra-', true) : []\n    }\n\n    /**\n     * @returns {{cabinets:boolean, fridge:boolean, oven:boolean, windows:boolean}}\n     */\n    get extra() {\n        return this.ops['service-cleaning'] ? this.#getOptionWithPrefix('extra-') : {}\n    }\n\n    /**\n     * @returns {('xs'|'s'|'m'|'l'|'xl'|'')}\n     */\n    get ironing() {\n        return this.ops['service-ironing'] ? this.ops.ironing.replace('ironing-size-', '') : ''\n    }\n\n    /**\n     * @returns {number}\n     */\n    get postalCode() {\n        return this.ops['postal-code']\n    }\n\n    /**\n     * @returns {Services}\n     */\n    get services() {\n        return this.#filterOptionWithPrefix('service-', true)\n    }\n\n    /**\n     * @returns {Service}\n     */\n    get service() {\n        return this.#getOptionWithPrefix('service-')\n    }\n\n    /**\n     * @returns {number}\n     */\n    get duration() {\n        return this.ops?.duration\n    }\n\n    /**\n     * @returns {('weekly'|'biweekly'|'once')}\n     */\n    get recurrence() {\n        return this.ops?.frequency\n    }\n\n    /**\n     * @returns {Date}\n     */\n    get start() {\n        return new Date(this.ops['start-timestamp'])\n    }\n\n    /**\n     * @returns {Date}\n     */\n    get end() {\n        return new Date(this.ops['end-timestamp'])\n    }\n\n    /**\n     * @typedef {Object} TeamMember\n     * @property {string} id\n     * @property {string} name\n     * @property {string} firstName\n     *\n     * @returns {TeamMember}\n     */\n    get teamMember() {\n        return {\n            id: this.ops['team-member'],\n            name: this.ops['team-member-name'],\n            firstName: this.ops['team-member-first-name']\n        }\n    }\n}\n","import Cookies from 'js-cookie'\n\n/**\n * @typedef {string} StepCode\n */\n\n/**\n * @enum {StepCode}\n */\nconst STEP = {\n    PostalCode: '/booking',\n    Services: '/booking/services',\n    Ironing: '/booking/ironing',\n    Cleaning: '/booking/cleaning',\n    Duration: '/booking/duration',\n    Availability: '/booking/availability',\n    Confirmation: '/booking/confirmation'\n}\n\nconst COOKIE_BOOKING = '__booking'\n\n/**\n * Sequence Controller\n */\nexport default class Sequence {\n    #current\n    list\n\n    /**\n     * @param {StepCode} curr\n     */\n    constructor(curr) {\n        const cookieStr = Cookies.get(COOKIE_BOOKING)\n\n        if (cookieStr) {\n            const cookie = JSON.parse(cookieStr)\n            this.list = cookie.seq\n        } else this.init({})\n\n        this.current = curr\n    }\n\n    init({ ironing = false, cleaning = false } = {}) {\n        let seq = [STEP.PostalCode, STEP.Services]\n        if (ironing) seq.push(STEP.Ironing)\n        if (cleaning) seq.push(STEP.Cleaning)\n        seq = seq.concat([STEP.Duration, STEP.Availability, STEP.Confirmation])\n        this.list = seq\n        this.setCookies()\n    }\n\n    setCookies() {\n        Cookies.set(\n            COOKIE_BOOKING,\n            JSON.stringify({\n                seq: this.list\n            }),\n            { secure: true, sameSite: 'strict' }\n        )\n    }\n\n    next() {\n        return this.list[this.#current + 1]\n    }\n\n    prev() {\n        return this.list[this.#current - 1]\n    }\n\n    get total() {\n        return this.list.length\n    }\n\n    get current() {\n        return this.list[this.#current]\n    }\n\n    /**\n     * @param {string} current\n     */\n    set current(curr) {\n        const currIndex = Object.values(this.list).findIndex(e => e === curr)\n        if (currIndex >= 0) this.#current = currIndex\n    }\n\n    get currentIndex() {\n        return this.#current\n    }\n}\n\nexport { STEP }\n","// eslint-disable-next-line max-classes-per-file\nclass Dom {\n    /**\n     * Get Element by Id\n     *\n     * @param {string} id element id\n     * @returns {Element}\n     */\n    static id(id) {\n        return document.getElementById(id)\n    }\n\n    /**\n     * Query selector\n     *\n     * @param {string} query Dom query string\n     * @returns {Element}\n     */\n    static q(query) {\n        return document.querySelector(query)\n    }\n\n    /**\n     * Query selector all\n     *\n     * @param {string} query Dom query string\n     * @returns {NodeList}\n     */\n    static qall(query) {\n        return document.querySelectorAll(query)\n    }\n\n    /**\n     * Message popup\n     * @param {string} id\n     * @returns {Promise}\n     */\n    static toast(id) {\n        const toastBlock = Dom.id(id)\n        toastBlock.classList.add('active')\n\n        return setTimeout(() => {\n            toastBlock.classList.remove('active')\n        }, 1000 * 4)\n    }\n\n    static set nextButtonDisabled(isDisabled) {\n        const nextButton = document.querySelector('.next-button-flow')\n        if (!nextButton) return\n        nextButton.disabled = isDisabled\n        if (isDisabled) nextButton.classList.add('disabled')\n        else nextButton.classList.remove('disabled')\n    }\n\n    /**\n     * Helpers\n     */\n    static queryOptions(id, checked = false) {\n        return Array.from(\n            document.querySelectorAll(`input[id*='${id}']${checked ? ':checked' : ''}`)\n        )\n    }\n\n    static getRadio(name, checked = false) {\n        return this.q(`input[name*=\"${name}\"]${checked ? ':checked' : ''}`)\n    }\n\n    static queryRadio(name, checked = false) {\n        return Array.from(this.qall(`input[name*='${name}']${checked ? ':checked' : ''}`))\n    }\n\n    static getOption(id, checked = false) {\n        return this.q(`input[id*='${id}']${checked ? ':checked' : ''}`)\n    }\n}\n\nconst dom = Dom\n\nexport default dom\n","import dom from '../helpers/dom'\nimport Sequence, { STEP } from './sequence'\n\nexport default class NavigationController {\n    sequence\n\n    constructor({ formId = 'wf-form-step', sequence = new Sequence() }) {\n        this.sequence = sequence\n\n        // Submit = nextButton\n        if (dom.id(formId)) dom.id(formId).onsubmit = this.onNext.bind(this)\n        dom?.id('back-button')?.addEventListener('click', this.onBack.bind(this))\n\n        // Browser history\n        window.onpopstate = this.onBack.bind(this)\n    }\n\n    // Navigate to first STEP (Services)\n    restart() {\n        window.location.href = STEP.Services\n    }\n\n    /**\n     *\n     * @param {import('./sequence').StepCode} step\n     */\n    goto(step) {\n        window.location.href = step\n    }\n\n    /**\n     * @param {Event} e\n     */\n    onNext(e) {\n        e.preventDefault()\n        // eslint-disable-next-line no-restricted-globals\n        history.pushState({}, null, location.href)\n        window.location.href = this.sequence.next()\n    }\n\n    onBack() {\n        // eslint-disable-next-line no-restricted-globals\n        // history.back()\n        window.location.href = this.sequence.prev()\n    }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable class-methods-use-this */\nexport default class Team {\n    /**\n     * Team Members\n     * @typedef {{fileId: string, url: string }} Image\n     * @typedef {Object} TeamMember\n     * @property {string} name\n     * @property {string} slug\n     * @property {string} email\n     * @property {boolean} english\n     * @property {boolean} french\n     * @property {boolean} dutch\n     * @property {Image} profile-picture\n     */\n    /**\n     * @type {TeamMember[]}\n     * @protected\n     */\n    _members\n\n    /**\n     * @type {Promise}\n     * @protected\n     */\n    #teamReq\n\n    constructor() {\n        // Get all team members from Webflow CMS\n        this.#teamReq = this.#fetchTeam()\n    }\n\n    /**\n     * Fetch team members from webflow CMS\n     */\n    async #fetchTeam() {\n        const url = new URL('https://inplace-booking.azurewebsites.net/api/collection')\n        const params = new URLSearchParams({\n            code: 'Itrex4w/daAwDFd78PsawdASdJyo9clkm1OOhG0Z3GLEe6m484/49A==',\n            name: 'team'\n        })\n\n        url.search = params\n        const res = await fetch(url)\n        const members = await res.json()\n\n        this._members = members\n    }\n\n    get members() {\n        // Is possible that #fetchTeam hasn't replied yet with members\n        return (async () => {\n            await this.#teamReq\n            return this._members\n        })()\n    }\n\n    /**\n     * @param {MemberId} memberId\n     */\n    async getMember(memberId) {\n        return (await this.members).find(m => m.name === memberId)\n    }\n\n    /**\n     * @typedef {Object} MemberIDConf\n     * @property {string} first_name\n     * @property {string} last_name\n     *\n     * @typedef {string} MemberId Member Id\n     *\n     * @param {MemberIDConf} conf\n     * @return {MemberId}\n     */\n    makeMemberId(conf) {\n        return `${conf.first_name} ${conf.last_name}`\n    }\n\n    /**\n     * Set details of an member element\n     *\n     * @typedef {Object} MemberConf\n     * @property {string} first_name\n     * @property {string} last_name\n     *\n     * @param {HTMLElement} node\n     * @param {MemberId} memberId\n     * @param {MemberConf} conf Hard confs for members not in Webflow\n     */\n    async setMemberDetails(node, memberId, conf) {\n        // Get profile picture from webflow collections\n        const member = await this.getMember(memberId)\n\n        if (member) {\n            const avatar = member?.['profile-picture']\n\n            if (avatar?.url) node.querySelector('.team-avatar').src = avatar.url\n\n            // Languages\n            if (member.french) node.querySelector('.french').classList.remove('hidden')\n            if (member.dutch) node.querySelector('.dutch').classList.remove('hidden')\n            if (member.english) node.querySelector('.english').classList.remove('hidden')\n        }\n\n        // Set Name from conf\n        const label = node.querySelector('.team-member-name')\n        if (label) label.innerText = conf.first_name\n\n        // Save team member name in attribute\n        // In summary this input wont exits\n        const nodeInput = node.querySelector('input')\n        if (nodeInput) {\n            nodeInput.setAttribute('member-name', `${conf.first_name} ${conf.last_name}`)\n            nodeInput.setAttribute('member-first-name', `${conf.first_name}`)\n        }\n    }\n}\n","/* eslint-disable max-classes-per-file */\nimport dom from '../dom'\n\n/**\n * Confirmation\n */\nclass ConfirmationDom {\n    static get selected() {\n        return dom.getRadio('ironing-size', true)?.value?.replace(/^ironing-size-/, '')\n    }\n\n    static submitButtonText\n    static msgTimeout\n\n    static done() {\n        dom.id('wf-form-booking').classList.add('completed')\n        dom.id('form-done').classList.add('active')\n    }\n\n    static onSubmit() {\n        const button = dom.id('button-submit')\n        this.submitButtonText = button.value\n        button.value = button.attributes['data-wait'].value\n        button.disabled = true\n        button.classList.add('wait')\n\n        if (this.msgTimeout) {\n            clearTimeout(this.msgTimeout)\n            this.error.hide()\n        }\n    }\n\n    static onSubmitDone() {\n        const button = dom.id('button-submit')\n        button.value = this.submitButtonText\n        button.disabled = false\n        button.classList.remove('wait')\n    }\n\n    static error = class {\n        static set title(title) {\n            dom.id('error-title').innerText = title\n        }\n\n        static set detail(title) {\n            dom.id('error-detail').innerText = title\n        }\n\n        static toast(id) {\n            this.msgTimeout = dom.toast(id)\n        }\n    }\n}\n\nconst domConf = ConfirmationDom\nexport default domConf\n","import dom from '../dom'\n\n/**\n * Summary\n */\nclass SummaryDom {\n    /**\n     * @typedef {import('../controllers/options').Service} ServiceOptions\n     * @param {ServiceOptions} service\n     */\n    static set service(service) {\n        Object.entries(service).forEach(([s, isActive]) => this.displayService(s, isActive))\n    }\n\n    /**\n     * Show or hide service\n     * @param {import('../controllers/options').Services} s\n     * @param {boolean} display\n     */\n    static displayService(s, display = true) {\n        const { classList } = dom.id(`summary-${s}`)\n        if (display) classList?.add('service-active')\n        else classList?.remove('service-active')\n    }\n\n    /**\n     * Display recurrence\n     * @param {('weekly'|'biweekly'|'once')} r\n     */\n    static set recurrence(r) {\n        dom.id(`summary-${r}`)?.classList.remove('hidden')\n    }\n}\n\nconst domSummary = SummaryDom\nexport default domSummary\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-var */\n\nimport Cookies from 'js-cookie'\nimport BookingOptions from '../controllers/options'\nimport { STEP } from '../controllers/sequence'\nimport StepController from '../controllers/step'\nimport Team from '../fragments/teamMember'\nimport dom from '../helpers/dom'\nimport domConf from '../helpers/dom/confirmation'\nimport domSummary from '../helpers/dom/summary'\nimport './confirmation.css'\n\nconst SESSION_COOKIE = '__inplace_booking_session'\nconst FORM_ID = 'wf-form-booking'\n\nclass Step extends StepController {\n    /**\n     * @type {BookingOptions}\n     */\n    ops\n\n    /**\n     * @type {Team}\n     */\n    team\n\n    constructor() {\n        super(STEP.Confirmation, FORM_ID)\n        this.ops = new BookingOptions()\n        this.team = new Team()\n    }\n\n    init() {\n        super.init()\n        this.#createSummary()\n        this.#setTeamMember()\n        this.setupBookingSession()\n    }\n\n    /**\n     * No need to set input handlers for next button, since this is the\n     * last step.\n     * the input.checked = false fix is also messing with FpCookies unloading\n     */\n    setupInputHandlers() {\n        dom.id(FORM_ID).onsubmit = this.onSubmit.bind(this)\n    }\n\n    /**\n     * @typedef {Object} BookingResponse\n     * @property {number} parent_booking_id\n     * @property {number} booking_request_id\n     * @property {string} start_timestamp\n     * @property {string} start_date\n     * @property {string} start_time\n     * @property {string} end_timestamp\n     * @property {string} end_date\n     * @property {string} end_time\n     * @property {string} duration\n     * @property {RecurrenceType} recurrence\n     * @property {BookingWebhookCustomer} customer\n     * @property {BookingWebhookTeamMember} team\n     * @property {BookingWebhookAddress} address\n     * @property {CalendarEvents} events\n     *\n     *\n     * @typedef {Object} BookingWebhookCustomer\n     * @property {number} contract_id\n     * @property {string} name\n     * @property {string} email\n     * @property {string} sodexo\n     * @property {string} language\n     *\n     * @typedef {Object} BookingWebhookTeamMember\n     * @property {number} contract_id\n     * @property {string} name\n     * @property {string} email\n     * @property {string} sodexo\n     * @property {string} phone\n     *\n     * @typedef {Object} BookingWebhookAddress\n     * @property {string} id\n     * @property {string} zip_code\n     * @property {string} town\n     * @property {string} street_name\n     * @property {string} street_number\n     *\n     * @typedef {Object} CalendarEvents\n     * @property {string} google\n     * @property {string} outlook\n     * @property {AppleCalendar} apple\n     *\n     * @typedef {Object} AppleCalendar\n     * @property {string} url\n     * @property {string} content\n     * @property {string} ics B\n     *\n     * @typedef {\"once\" | \"weekly\" | \"biweekly\"} RecurrenceType\n     */\n\n    /**\n     * Form Submission\n     * @param {SubmitEvent} event\n     */\n    async onSubmit(event) {\n        event.preventDefault()\n        const form = event.target\n        const data = new FormData(form)\n\n        /** @type {BookingForm} */\n        const json = Object.fromEntries(data.entries())\n        const booking = this.makeBooking(json)\n        const url = new URL(form.attributes.action.value)\n\n        try {\n            domConf.onSubmit()\n\n            const resRaw = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    contentType: 'application/json',\n                    dataType: 'json'\n                },\n                body: JSON.stringify(booking)\n            })\n\n            /** @type {BookingResponse} */\n            const res = await resRaw.json()\n\n            if (resRaw.status >= 300) {\n                this.logError(resRaw, res)\n\n                if (res?.errors?.sodexo_reference) domConf.error.toast('toast-sodexo')\n                else if (res?.error === 'UNAVAILABLE_TIME_SLOT')\n                    domConf.error.toast('toast-unavailable-slot')\n                else if (res?.error === 'customer_unavailability')\n                    domConf.error.toast('toast-unavailable-customer')\n                else domConf.error.toast('toast-submit-error')\n\n                domConf.onSubmitDone()\n            } else {\n                this.handleNewBooking(res)\n                setTimeout(() => {\n                    domConf.done()\n                }, 1000 * 1)\n            }\n        } catch (error) {\n            this.logError(error.message)\n            domConf.error.toast('toast-submit-error')\n            domConf.onSubmitDone()\n        }\n    }\n\n    /**\n     * Do stuff with new booking\n     * @param {BookingResponse} res\n     */\n    handleNewBooking(res) {\n        dom.id('cal-apple').href &&= res.events.apple.url\n        dom.id('cal-ics').href &&= res.events.apple.url\n        dom.id('cal-google').href &&= res.events.google\n        dom.id('cal-outlook').href &&= res.events.outlook\n    }\n\n    /**\n     * @typedef {Object} BookingForm\n     * @property {string} duration\n     * @property {string} frequency\n     * @property {string} start-timestamp\n     * @property {string} end-timestamp\n     * @property {string} team-member\n     * @property {string} team-member-name\n     * @property {string} customer-id\n     * @property {string} customer-address-id\n     * @property {string} service-ironing\n     * @property {string} service-grocery\n     * @property {string} service-cooking\n     * @property {string} service-cleaning\n     * @property {string} extra-fridge\n     * @property {string} extra-cabinets\n     * @property {string} extra-oven\n     * @property {string} extra-windows\n     * @property {string} ironing\n     * @property {string} cleaning-bathrooms\n     * @property {string} cleaning-bedrooms\n     */\n\n    /**\n     * @typedef {Object} BookingAPI\n     * @property {string} duration\n     * @property {string} frequency\n     * @property {string} start_timestamp\n     * @property {string} end_timestamp\n     * @property {string} team_member_contract_id\n     * @property {string} team_member_name\n     * @property {string} customer_id\n     * @property {string} customer_address_id\n     * @property {BookingAPIOptions} options\n     */\n    /**\n     * @typedef {Object} BookingAPIOptions\n     * @property {boolean} service_cleaning\n     * @property {boolean} service_ironing\n     * @property {boolean} service_grocery\n     * @property {boolean} service_cooking\n     * @property {string} cleaning_bedrooms\n     * @property {string} cleaning_bathrooms\n     * @property {boolean} extra_windows\n     * @property {boolean} extra_cabinets\n     * @property {boolean} extra_fridge\n     * @property {boolean} extra_oven\n     * @property {string} ironing\n     */\n\n    /**\n     * Create booking API object from form\n     * @param {BookingForm} json\n     * @returns {BookingAPI}\n     */\n    makeBooking(json) {\n        const toBool = f => f === 'on'\n        const rmUndefined = obj => {\n            // eslint-disable-next-line no-param-reassign\n            Object.keys(obj).forEach(key => obj[key] === undefined && delete obj[key])\n            return obj\n        }\n\n        const booking = {\n            duration: json.duration,\n            frequency: json.frequency,\n            start_timestamp: json['start-timestamp'],\n            end_timestamp: json['end-timestamp'],\n            team_member_contract_id: json['team-member'],\n            team_member_name: json['team-member-name'],\n            customer_id: json['customer-id'],\n            customer_address_id: json['customer-address-id'],\n            options: {\n                service_cleaning: toBool(json['service-cleaning']),\n                service_ironing: toBool(json['service-ironing']),\n                service_grocery: toBool(json['service-grocery']),\n                service_cooking: toBool(json['service-cooking']),\n                extra_windows: toBool(json['extra-windows']),\n                extra_cabinets: toBool(json['extra-cabinets']),\n                extra_fridge: toBool(json['extra-fridge']),\n                extra_oven: toBool(json['extra-oven']),\n                cleaning_bedrooms: json['cleaning-bedrooms'],\n                cleaning_bathrooms: json['cleaning-bathrooms'],\n                ironing: json.ironing?.replace('ironing-size-', '')\n            }\n        }\n\n        return rmUndefined(booking)\n    }\n\n    /**\n     * Log error\n     * @param {*} res\n     */\n    logError(res, json) {\n        console.log('Something went wrong...')\n        console.log(`Status: ${res.status} ${res.statusText}`)\n\n        if (json) console.log(`Response: ${JSON.stringify(json)}`)\n        else console.log(`Response: ${res}`)\n    }\n\n    /**\n     * Read options and create a summary\n     */\n    #createSummary() {\n        // Selected services\n        const { service, recurrence } = this.ops\n        domSummary.service = service\n        domSummary.recurrence = recurrence\n\n        // Start date\n        dom.id('conf-start').innerText = this.ops.start.toLocaleString('fr', {\n            dateStyle: 'short',\n            timeStyle: 'short'\n        })\n    }\n\n    #setTeamMember() {\n        const memberConf = {\n            first_name: this.ops.teamMember.firstName\n        }\n\n        const memberId = this.ops.teamMember.name\n        const node = dom.id('conf-team-member')\n\n        this.team.setMemberDetails(node, memberId, memberConf)\n    }\n\n    /**\n     * Set cookie to be used in /redirect here when login/signup is done\n     */\n    setupBookingSession() {\n        const buttons = [dom.id('btn-signup'), dom.id('btn-login')]\n        buttons.forEach(b =>\n            b?.addEventListener('click', () => {\n                Cookies.set(SESSION_COOKIE, true, { secure: true, sameSite: 'strict' })\n            })\n        )\n    }\n}\n\nvar Webflow = Webflow || window.Webflow || []\nWebflow.push(() => {\n    const step = new Step()\n    step.init()\n})\n","import dom from '../helpers/dom'\nimport NavigationController from './navigation'\nimport BookingOptions from './options'\nimport Sequence, { STEP } from './sequence'\n\nexport default class StepController {\n    /**\n     * @type {HTMLFormElement}\n     */\n    form\n\n    /**\n     * @type {NavigationController}\n     */\n    nav\n\n    /**\n     * @type {BookingOptions}\n     */\n    ops\n\n    /**\n     * Create new StepController\n     * @param {import('./sequence').StepCode} curr Current step\n     * @param {string} formId Step form Id\n     */\n    constructor(curr, formId = 'wf-form-step') {\n        this.form = dom.id(formId)\n        this.nav = new NavigationController({ formId, sequence: new Sequence(curr) })\n        this.ops = new BookingOptions()\n        this.validateState()\n    }\n\n    /**\n     * Initialize controller\n     */\n    init() {\n        this.setupInputHandlers()\n        dom.nextButtonDisabled = true\n        this.toggleNext()\n        this.updateNav()\n    }\n\n    /**\n     * Create event handlers\n     */\n    setupInputHandlers() {\n        this.form.querySelectorAll('input').forEach(input => {\n            // Do not mess with submit button\n            if (input.type === 'submit') return\n\n            const inputEvent = {\n                radio: 'click',\n                number: 'input'\n            }\n\n            const event = inputEvent[input.type] || 'change'\n\n            input.addEventListener(event, this.toggleNext.bind(this))\n\n            // Sometimes inputs start checked for no reason\n            // eslint-disable-next-line no-param-reassign\n            input.checked = false\n        })\n    }\n\n    /**\n     * Check if a booking session cookie exists with booking options\n     * Otherwise, redirect to /booking/services\n     */\n    validateState() {\n        if (!this.ops.isValid || !this.ops.postalCode) this.nav.goto(STEP.PostalCode)\n        else if (this.ops.services.length === 0) this.nav.goto(STEP.Services)\n    }\n\n    /**\n     * Toggle next button active\n     */\n    toggleNext() {\n        dom.nextButtonDisabled = this.isNextDisabled\n    }\n\n    /**\n     * Control next button\n     */\n    // eslint-disable-next-line class-methods-use-this\n    get isNextDisabled() {\n        return false\n    }\n\n    /**\n     * Update Nav step count\n     */\n    updateNav() {\n        dom.id('step-nav').innerHTML = `Step ${this.nav.sequence.currentIndex}/${\n            this.nav.sequence.total - 1\n        }`\n    }\n}\n"],"names":["target","i","arguments","length","source","key","api","init","converter","defaultAttributes","set","value","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","Object","create","get","cookies","jar","parts","slice","join","foundKey","read","e","remove","withAttributes","this","withConverter","freeze","path","rmPrefix","s","p","RegExp","BookingOptions","ops","constructor","window","FpCookie","store","isValid","keys","prefix","entries","filter","_","startsWith","reduce","acc","undefined","map","cleaning","extras","extra","ironing","postalCode","services","service","duration","recurrence","frequency","start","end","teamMember","id","name","firstName","STEP","COOKIE_BOOKING","Sequence","list","curr","cookieStr","Cookies","JSON","parse","seq","current","push","concat","setCookies","stringify","secure","sameSite","next","prev","total","currIndex","values","findIndex","currentIndex","Dom","getElementById","query","querySelector","querySelectorAll","toastBlock","classList","add","setTimeout","nextButtonDisabled","isDisabled","nextButton","disabled","checked","Array","from","q","qall","NavigationController","sequence","formId","dom","onsubmit","onNext","bind","addEventListener","onBack","onpopstate","restart","location","href","goto","step","preventDefault","history","pushState","Team","_members","url","URL","params","URLSearchParams","code","search","res","fetch","members","json","memberId","find","m","makeMemberId","conf","first_name","last_name","node","member","getMember","avatar","src","french","dutch","english","label","innerText","nodeInput","setAttribute","selected","button","submitButtonText","msgTimeout","clearTimeout","error","hide","title","detail","forEach","isActive","displayService","display","r","FORM_ID","Step","form","nav","validateState","setupInputHandlers","toggleNext","updateNav","input","type","event","radio","number","isNextDisabled","innerHTML","team","super","setupBookingSession","onSubmit","data","FormData","fromEntries","booking","makeBooking","action","domConf","resRaw","method","headers","contentType","dataType","body","status","logError","errors","sodexo_reference","handleNewBooking","message","events","apple","google","outlook","toBool","f","start_timestamp","end_timestamp","team_member_contract_id","team_member_name","customer_id","customer_address_id","options","service_cleaning","service_ironing","service_grocery","service_cooking","extra_windows","extra_cabinets","extra_fridge","extra_oven","cleaning_bedrooms","cleaning_bathrooms","obj","console","log","statusText","domSummary","toLocaleString","dateStyle","timeStyle","memberConf","setMemberDetails","b","Webflow"],"sourceRoot":""}